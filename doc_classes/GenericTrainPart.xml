<?xml version="1.0" encoding="UTF-8" ?>
<class name="GenericTrainPart" inherits="TrainPart" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
	</brief_description>
	<description>
		This class allows to implement a custom TrainPart in GDScript.
		You need to implement [method _get_train_part_state] returning a [Dictionary] of the actual state of this train part.
		You also need to implement [method _process_train_part] if you need to compute a custom behaviour of this train part. Note that [method _process_train_part] is an equivalent of a pure [method _process] surrounded by simple condition:
		[code]
		func _process(delta):
		    if enabled:
		        _process_train_part(delta)
		[/code]
		NOTE: it is safer to stay with overriding [method _process_train_part] for a future compatibility.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_train_controller_node">
			<return type="TrainController" />
			<description>
				Returns bound [TrainController] instance (may be null)
			</description>
		</method>
		<method name="get_train_state">
			<return type="Dictionary" />
			<description>
				Returns a [Dictionary] with a current state of the [TrainController].
				This is a shortcut for [method TrainController.get_state] and [method TrainSystem.get_train_state].
			</description>
		</method>
	</methods>
</class>
